Approach 1: O(nlogn) time, O(1) space
class Solution {
    public int majorityElement(int[] nums) {
        if(nums.length == 1){
            return nums[0];
        }
        Arrays.sort(nums);
        return (nums[(nums.length/2)]);
    }
}

//Approach 2: better approach : O(n) time, O(1) space:
class Solution {
    public int majorityElement(int[] nums) {
        int candidate = nums[0];
        int count = 1;
        for(int i = 1;i < nums.length;i++){
            if(candidate == nums[i]){
                count++;
            }
            else{
                count--;
            }
            if(count == 0){
                candidate = nums[i];
                count = 1;
            }
            
        }
        if(count > 0){
            return candidate;
        }
        return -1;
    }
}
